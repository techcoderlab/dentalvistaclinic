/* ==================== Global Styles ====================== */
*,
::before,
::after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
html {
  -webkit-text-size-adjust: 100%;
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
  font-feature-settings: normal;
  font-variation-settings: normal;
  -webkit-tap-highlight-color: transparent;
  scroll-behavior: smooth;
}

body {
  font-family: $font-family_normal;
  font-size: 1rem;
  font-weight: 300;
  color: $text-black-light;
  line-height: 1.75;
  letter-spacing: 0.02rem;
  transition: all 0.5s ease;
  @include add-background();
}

html,
body {
  display: block;
  overflow-x: hidden;
  transition: all 0.5s ease;
}

p {
  margin: 0.6rem 0;
}

ul {
  &.style-none {
    list-style: none;
  }
}

a {
  text-decoration: none;
  &:hover,
  &:focus {
    text-decoration: underline;
  }

  &.hover-decoration-none {
    &:hover,
    &:focus {
      text-decoration: none;
    }
  }
}

::-webkit-selection {
  color: #f1f1f1;
  background: $accent-semi-dark;
}
::-moz-selection {
  color: #f1f1f1;
  background: $accent-semi-dark;
}
::selection {
  color: #f1f1f1;
  background: $accent-semi-dark;
}

/* ==================== Reusable Classes ====================== */
.container {
  max-width: 100%;
  &--py {
    padding: 2rem 0;
  }
  padding: 0 1rem;
  margin: 0 auto;

  @media screen and (min-width: 576px) {
    max-width: 540px;
  }
  @media screen and (min-width: 768px) {
    max-width: 720px;
  }
  @media screen and (min-width: 992px) {
    max-width: 960px;
  }
  @media screen and (min-width: 1200px) {
    max-width: 1200px;
  }
  @media screen and (min-width: 1400px) {
    max-width: 1320px;
  }
}

.grid {
  display: grid;
  gap: 1.5rem;
}

.responsive-image {
  display: block;
  max-width: 100%;
  height: auto;
}

.section {
  &--hero-py {
    padding-block: calc($sectionPadding * 1.4) calc($sectionPadding * 2.4);
  }
  &--pt {
    padding-block-start: calc($sectionPadding * 1);
  }
  &--pb {
    padding-block-end: calc($sectionPadding * 1);
  }
  &--py {
    padding-block: calc($sectionPadding * 1);
  }
}

.image-wrapper-parent {
  position: relative;
  overflow: hidden;
}
.image-wrapper {
  position: absolute;
  inset: 0;
  background: $accent-light;
  z-index: -1;

  .overlay {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    background: #fff8f9;
    background: linear-gradient(
      60deg,
      rgb(255, 255, 255) 30%,
      rgba(255, 248, 249, 0.206) 100%
    );
    filter: opacity(0.9);
    z-index: 1;
  }

  img {
    position: absolute;
    inset: 0;
    object-fit: cover;
    object-position: center center;
    width: 100%;
    height: 100%;
    @media screen and (min-width: 992px) {
      object-position: top center;
    }
  }
}

.icon-container {
  width: 50px;
  aspect-ratio: 1/1;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  i {
    color: $accent-dark;
    font-size: 2.5rem;
    height: fit-content;
    width: fit-content;
  }
}

.flex {
  @include flex();
  &-col,
  &--col {
    flex-direction: column;
  }

  // horizontal layout on mid-screens
  //   @include sm {
  //     &--sm-row {
  //       flex-direction: row;
  //     }
  //   }

  // horizontal: justify-content
  &--center {
    justify-content: center;
  }
  &--left {
    justify-content: flex-start;
  }
  &--right {
    justify-content: flex-end;
  }
  &--space {
    justify-content: space-between;
  }
  &--solo {
    // if there's only one child, centre it
    > :only-child {
      margin: 0 auto;
    }
  }

  // vertical: align-items
  &--middle {
    align-items: center;
  }
  &--stretch {
    align-items: stretch;
  }
  &--top {
    align-items: flex-start;
  }
  &--bottom {
    align-items: flex-end;
  }

  // allow wrapping
  &--wrap {
    flex-wrap: wrap;
    &:after {
      content: "";
      flex: auto;
    }
  }

  // reverse order
  &--reverse {
    flex-direction: row-reverse;
  }
  // reverse order
  &--reverse-col {
    flex-direction: column-reverse;
  }

  // equal columns
  &--equal {
    > * {
      flex: 1;
    }
  }

  // expand column
  &--fill {
    flex-grow: 100;
  }

  $spacer: 1rem;
  $spacers: (
    0: 0,
    1: $spacer * 0.25,
    2: $spacer * 0.5,
    3: $spacer,
    4: $spacer * 1.5,
    5: $spacer * 3,
  );

  @each $key, $spacer in $spacers {
    &--gap-#{$key} {
      gap: #{$spacer};
    }
  }
}

.image-fade {
  animation-name: fade;
  animation-duration: 2s;

  @keyframes fade {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}
